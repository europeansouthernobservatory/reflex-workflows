<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="idldemo" class="ptolemy.actor.TypedCompositeActor">
    <property name="entityId" class="org.kepler.moml.NamedObjId" value="urn:lsid:kepler-project.org/ns/:67958:46:75">
    </property>
    <property name="class" class="ptolemy.kernel.util.StringAttribute" value="ptolemy.actor.TypedCompositeActor">
        <property name="id" class="ptolemy.kernel.util.StringAttribute" value="null">
        </property>
    </property>
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="9.1.devel">
    </property>
    <property name="derivedFrom" class="org.kepler.moml.NamedObjIdReferralList">
    </property>
    <property name="DDF Director" class="ptolemy.domains.ddf.kernel.DDFDirector">
        <property name="localClock" class="ptolemy.actor.LocalClock">
            <property name="globalTimeResolution" class="ptolemy.actor.parameters.SharedParameter" value="1E-10">
            </property>
            <property name="clockRate" class="ptolemy.data.expr.Parameter" value="1.0">
            </property>
        </property>
        <property name="iterations" class="ptolemy.data.expr.Parameter" value="0">
        </property>
        <property name="maximumReceiverCapacity" class="ptolemy.data.expr.Parameter" value="0">
        </property>
        <property name="runUntilDeadlockInOneIteration" class="ptolemy.data.expr.Parameter" value="false">
        </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Gang Zhou</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>&#10;            &lt;p&gt; The dynamic dataflow (DDF) domain is a superset of the synchronous&#10;            dataflow(SDF) and Boolean dataflow(BDF) domains. In the SDF domain,&#10;            an actor consumes and produces a fixed number of tokens per firing.&#10;            This static information makes possible compile-time scheduling. In the&#10;            DDF domain, there are few constraints on the production and consumption&#10;            behavior of actors, and the schedulers make no attempt to construct a&#10;            compile-time schedule. Instead, each actor has a set of firing rules&#10;            (patterns) and can be fired if one of them is satisfied, i.e., one&#10;            particular firing pattern forms a prefix of sequences of unconsumed&#10;            tokens at input ports. The canonical actors in the DDF domain include&#10;            Select and Switch, which consume or produce tokens on different channels&#10;            based on the token received from the control port. (In practice, use&#10;            DDFSelect and DDFBooleanSelect in the DDF-specific library instead of&#10;            Select and BooleanSelect in the regular FlowControl library; however,&#10;            Switch and BooleanSwitch in the regular FlowControl library can be&#10;            used in DDF domain.)&lt;/p&gt;&#10;           &#10;            &lt;p&gt; The dynamic scheduler implemented in this director fires all enabled&#10;            and non-deferrable actors once in a basic iteration. A deferrable&#10;            actor is one that will not help one of the downstream actors become&#10;            enabled because that downstream actor either already has enough tokens on&#10;            the channel connecting those two actors or is waiting for tokens on&#10;            another channel. If no actor fires so far, which means there is no&#10;            enabled and non-deferrable actor, then among all enabled and deferrable&#10;            actors, this director fires those which have the smallest maximum number&#10;            of tokens on their output channels which satisfy the demand of destination&#10;            actors. If still no actor fires, then there is no enabled actor. A user&#10;            can treat several such basic iterations as a single iteration by adding&#10;            a parameter with name &lt;i&gt;requiredFiringsPerIteration&lt;/i&gt; to an actor&#10;            (which is often a sink actor or an actor directly connected to output port&#10;            of the composite actor) and specifying the number of times this actor must&#10;            be fired in a single iteration. If the value of the parameter&#10;            &lt;i&gt;runUntilDeadlockInOneIteration&lt;/i&gt; is a BooleanToken with value true,&#10;            one single iteration consists of repeating the basic iteration until&#10;            deadlock is reached (thus overriding the previous definition of one&#10;            iteration), which is the status of the model where all active&#10;            actors under the control of this director are unable to fire because&#10;            their firing rules are not satisfied. However, they may be able to fire&#10;            again during next iteration when tokens are transferred in from an outside&#10;            domain. Note &lt;i&gt;runUntilDeadlockInOneIteration&lt;/i&gt; can be set to true&#10;            only when this director is not on the top level.&lt;/p&gt;&#10;           &#10;            &lt;p&gt; The algorithm implementing one basic iteration goes like this:&#10;            &lt;pre&gt;&#10;            E = set of enabled actors&#10;            D = set of deferrable enabled actors&#10;            &lt;/pre&gt;&#10;            One basic(default) iteration consists of:&#10;            &lt;pre&gt;&#10;            if (E\D != empty set) {&#10;            fire (E\D)&#10;            } else if (D != empty set) {&#10;            fire minimax(D)&#10;            } else {&#10;            declare deadlock&#10;            }&#10;            &lt;/pre&gt;&#10;            The function &quot;minimax(D)&quot; returns a subset of D with the smallest&#10;            maximum number of tokens on their output channels which satisfy the&#10;            demand of destination actors.&lt;/p&gt;&#10;           &#10;            &lt;p&gt; Note that any SDF model can be run with a DDF Director. However, the&#10;            notion of iteration is different. One could try to imitate the SDF&#10;            iteration in the DDF domain by controlling the number of firings in one&#10;            iteration for some actors, such as requiring a plotter to plot a fixed&#10;            number of points in each iteration.&lt;/p&gt;&#10;           &#10;            &lt;p&gt; In the DDF domain, the firing rule of any actor is specified by the token&#10;            consumption rates of its input ports. A general DDF actor could change&#10;            the consumption rates of its input ports after each firing of this actor.&#10;            For multiports, an array token could be used to specify different rates&#10;            for different channels connected to the same multiport. Note that in SDF,&#10;            all channels connected to the same multiport have the same rate.&lt;/p&gt;&#10;           &#10;            &lt;p&gt; Based on DDFSimpleSched in Ptolemy Classic, by Edward Lee.&#10;            See E. A. Lee et al., &quot;The Almagest,&quot; documentation for Ptolemy Classic,&#10;            Vol. 1, Chapter 7, 1997.&lt;/p&gt;&#10;           &#10;        </configure></property>
<property name="prop:iterations" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Specify the number of times a workflow is iterated. By default, this parameter is set to &quot;0&quot;. Note that &quot;0&quot; does not mean &quot;no iterations.&quot; Rather, &quot;0&quot; means that the workflow will iterate forever. Values greater than zero specify the actual number of times the director should execute the entire workflow. </configure></property>
<property name="prop:maximumReceiverCapacity" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>A Parameter representing the maximum capacity of each receiver controlled by this director. This is an integer that defaults to 0, which means the queue in each receiver is unbounded. To specify bounded queues, set this to a positive integer. </configure></property>
<property name="prop:runUntilDeadlockInOneIteration" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>A parameter indicating whether one iteration consists of repeated basic iterations until deadlock. If this parameter is true, the model will be executed until deadlock in one iteration. The default value is a BooleanToken with the value false. It cannot be set to true if this director is at the top level.</configure></property>
</property>        <property name="entityId" class="org.kepler.moml.NamedObjId" value="urn:lsid:kepler-project.org/ns/:67958:47:2">
        </property>
        <property name="class" class="ptolemy.kernel.util.StringAttribute" value="ptolemy.domains.ddf.kernel.DDFDirector">
            <property name="id" class="ptolemy.kernel.util.StringAttribute" value="urn:lsid:kepler-project.org:directorclass:5:1">
            </property>
        </property>
        <property name="semanticType00" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:1:1#Director">
        </property>
        <property name="semanticType11" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#Director">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-15.0, -300.0]">
        </property>
        <property name="derivedFrom" class="org.kepler.moml.NamedObjIdReferralList" value="urn:lsid:kepler-project.org:director:5:1">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={175, 36, 1048, 705}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[707, 556]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.1797795154353103">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{269.63225787113873, -7.362750528496292}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
        </property>
        <property name="_hideAllParameters" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="14">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.4,0.4,0.0,1.0}">
        </property>
        <property name="fontFamily" class="ptolemy.data.expr.StringParameter" value="SansSerif">
        </property>
        <property name="bold" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="italic" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This is an example of how to run an IDL routine within a Reflex workflow. &#10;It assumes that the IDL script, a supporting Python script and corresponding&#10;data are in HOME$idldemo/&#10;The &quot;IDL actor&quot; can be placed in any Reflex workflow.">
            <property name="_style" class="ptolemy.actor.gui.style.TextStyle">
                <property name="height" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="80">
                </property>
            </property>
        </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Edward A. Lee</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Use the Annotation attribute to annotate a workflow. Double-click the attribute to customize the content, font size, color, and basic formatting (bold and italics).</configure></property>
<property name="prop:fontFamily" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The font face. Select a font from the drop-down menu. The default is &quot;SansSerif&quot;.</configure></property>
<property name="prop:italic" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Select to indicate that the type should be italics. By default, type will not be italicized.</configure></property>
<property name="prop:bold" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Select to indicate that the type should be bold. By default, type will not be bold.</configure></property>
<property name="prop:textColor" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The font color. Specify a string representing an array of four elements: red, green, blue, and alpha, where alpha is transparency. The default is an opaque black, {0.0, 0.0, 0.0, 1.0}</configure></property>
<property name="prop:textSize" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The font size. Select an integer from the drop-down menu or specify a new size by typing it directly into the value field.  The default is 14.</configure></property>
<property name="prop:text" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The text of the annotation.</configure></property>
</property>        <property name="entityId" class="org.kepler.moml.NamedObjId" value="urn:lsid:kepler-project.org/ns/:67958:50:2">
        </property>
        <property name="class" class="ptolemy.kernel.util.StringAttribute" value="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="id" class="ptolemy.kernel.util.StringAttribute" value="urn:lsid:kepler-project.org:class:1199:1">
            </property>
        </property>
        <property name="semanticType00" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:1:1#DocumentationActor">
        </property>
        <property name="semanticType11" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#WorkflowDocumentation">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -245.0]">
        </property>
        <property name="derivedFrom" class="org.kepler.moml.NamedObjIdReferralList" value="urn:lsid:kepler-project.org:actor:436:1:urn:lsid:kepler-project.org/ns/:16482:52:1:urn:lsid:kepler-project.org/ns/:16989:16:1:urn:lsid:kepler-project.org/ns/:18725:2:3">
        </property>
    </property>
    <entity name="SofCreator" class="org.eso.SofCreator">
        <property name="Dataset Name" class="ptolemy.data.expr.StringParameter" value="demodata">
        </property>
        <property name="Default Category" class="ptolemy.data.expr.StringParameter" value="none">
        </property>
        <property name="Filename Pattern" class="ptolemy.data.expr.StringParameter" value="*.fits">
        </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>It reads the content of a directory and creates an SoF</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>ESO</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>2.0</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The SofCreator reads the contents of a directory and creates an SoF: the file category is based on the keyword PRO.CATG or REFLEX.CATG. If both are missing the Default Category is used.</configure></property>
<property name="port:data dir" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The input dir. If an empty string is provided the actor generates an empty SoF</configure></property>
<property name="port:sof out" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The output sof</configure></property>
<property name="prop:semanticType41" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="prop:Filename Pattern" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>a wildcard pattern representing the files to be included (e.g. *.fits)</configure></property>
<property name="prop:entityId" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="prop:Default Category" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The default category to be used if none is defined in the file.</configure></property>
<property name="prop:class" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
</property>        <property name="entityId" class="org.kepler.moml.NamedObjId" value="urn:lsid:kepler-project.org/ns/:67958:49:3">
        </property>
        <property name="" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="The SofCreator reads the contents of a directory and creates an SoF: the file category is based on the keyword PRO.CATG or REFLEX.CATG. If both are missing the Default Category is used.">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="ESO">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="2.0">
            </property>
            <property name="Default Category (parameter)" class="ptolemy.data.expr.StringParameter" value="The default category to be used if none is defined in the file.">
            </property>
            <property name="Filename Pattern (parameter)" class="ptolemy.data.expr.StringParameter" value="a wildcard pattern representing the files to be included (e.g. *.fits)">
            </property>
            <property name="data dir (port)" class="ptolemy.kernel.util.StringAttribute" value="The input dir. If an empty string is provided the actor generates an empty SoF">
            </property>
            <property name="sof out (port)" class="ptolemy.kernel.util.StringAttribute" value="The output sof">
            </property>
            <property name="semanticType41 (parameter)" class="ptolemy.data.expr.StringParameter" value="">
            </property>
            <property name="entityId (parameter)" class="ptolemy.data.expr.StringParameter" value="">
            </property>
            <property name="class (parameter)" class="ptolemy.data.expr.StringParameter" value="">
            </property>
        </property>
        <property name="class" class="ptolemy.kernel.util.StringAttribute" value="org.eso.SofCreator">
            <property name="id" class="ptolemy.kernel.util.StringAttribute" value="null">
            </property>
        </property>
        <property name="semanticType41" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:4:1#ESO">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[245.0, -155.0]">
        </property>
        <property name="derivedFrom" class="org.kepler.moml.NamedObjIdReferralList" value="urn:lsid:kepler-project.org:actor:906:1">
        </property>
        <port name="data dir" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
        <port name="sof out" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
        </port>
    </entity>
    <entity name="String Constant" class="ptolemy.actor.lib.StringConst">
        <property name="value" class="ptolemy.data.expr.Parameter" value="$HOME/idldemo/data/">
        </property>
        <property name="firingCountLimit" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="NONE" class="ptolemy.data.expr.Parameter" value="0">
        </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Edward Lee</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>&lt;p&gt;The StringConstant actor outputs a string specified via the actor's value parameter.&lt;/p&gt;&#10;&#10;&lt;p&gt;Specifying strings with the StringConstant actor is convenient, as the actor does not require that strings be surrounded by quotes. The actor is often used to specify file paths, which can be selected using the Browse button available in the actor's parameters.&lt;/p&gt;&#10;&#10;&lt;p&gt;Specified string values can include references to parameters within scope (i.e., parameters defined at the same level of the hierarchy or higher). &lt;/p&gt;&#10;&#10;&lt;p&gt;NOTE: If using a PN Director, the 'firingCountLimit' parameter is often set to a finite integer (e.g. '1') so that the workflow will terminate. &lt;/p&gt;&#10;&#10;</configure></property>
<property name="port:output" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>An output port that broadcasts a string constant specified by the value parameter.  </configure></property>
<property name="port:trigger" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>A multiport that has no declared type (in other words, the port can accept any data type: double, int, array, etc.) If the port is connected, the actor will not fire until the trigger port receives an input token. Connecting the port is optional, but useful when scheduling the actor to perform at a certain time. </configure></property>
<property name="prop:firingCountLimit" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The limit on the number of times the actor will fire. The default value is 'NONE', meaning there is no limit on the number of time the constant will be provided to the output port. Any integer can be provided as a value for this parameter.</configure></property>
<property name="prop:value" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The value produced by the actor. Specified strings do not require enclosing quotes. (To include a '$' sign in the string, enter '$$'.)</configure></property>
</property>        <property name="class" class="ptolemy.kernel.util.StringAttribute" value="ptolemy.actor.lib.StringConst">
            <property name="id" class="ptolemy.kernel.util.StringAttribute" value="urn:lsid:kepler-project.org:class:1052:1">
            </property>
        </property>
        <property name="semanticType00" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:1:1#StringFunctionActor">
        </property>
        <property name="semanticType11" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#Constant">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[80.0, -130.0]">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="IDL" class="org.eso.PythonActor">
        <property name="Python script" class="ptolemy.data.expr.FileParameter" value="$HOME/idldemo/call_idl.py">
        </property>
        <property name="Run in terminal" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="Lazy Mode" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="Recipe Failure Mode" class="ptolemy.data.expr.StringParameter" value="Stop">
        </property>
        <property name="Disable logging" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="Clean Temporary Directories" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="Products Dir" class="ptolemy.data.expr.FileParameter" value="$HOME/idldemo/data/out/products">
            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </property>
        <property name="Logs Dir" class="ptolemy.data.expr.FileParameter" value="$HOME/idldemo/data/out/log">
            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </property>
        <property name="Bookkeeping Dir" class="ptolemy.data.expr.FileParameter" value="$HOME/idldemo/data/out/bookkeeping">
            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>This actor executes a Python script</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>ESO</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>2.0</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The PythonActor executes custom python scripts: in order to use a script with this actor you must include the module reflex.py and add a couple of statements to define inputs and outputs (see example.py in the Reflex distribution).&#10;Upon selecting a script, input and output ports are automatically created. If applicable, output tokens are automatically converted to Reflex objects. If the object is an SoF, all the files must exist on disk. The checksum information is also extracted from the file and added to the final SoF, therefore allowing the lazy mode to work for downstream actors.</configure></property>
<property name="port:stdout" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>This port emits a token containing the standard output generated by the script execution</configure></property>
<property name="prop:author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="prop:Run in terminal" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>If true, the script is invoked through an external xterm, this is needed for scripts that write on the standard output or require standard input (e.g. some pyraf tasks)</configure></property>
<property name="prop:Python script" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The filename of the script to be executed (full path)</configure></property>
</property>        <property name="class" class="ptolemy.kernel.util.StringAttribute" value="org.eso.PythonActor">
            <property name="id" class="ptolemy.kernel.util.StringAttribute" value="null">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 15.0]">
        </property>
        <property name="prop:Disable logging" class="ptolemy.kernel.util.ConfigurableAttribute">
            <configure>If true, the script does not save the standard output and the standard error of the script execution in the logging directory. This feature is useful if you are using Pyraf and you experience occasional crashes.</configure>
        </property>
        <property name="author" class="ptolemy.kernel.util.ConfigurableAttribute">
            <configure>ESO</configure>
        </property>
        <port name="stdout" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_hide" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
        <port name="out_sof" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
        <port name="in_sof" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="SofCombiner" class="org.eso.SofCombiner">
        <property name="IgnorePurpose" class="ptolemy.data.expr.Parameter" value="false">
        </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>ESO</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>2.0</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The SofCombiner takes as input a number of set of files and combines them into one set of files that contains only the files whose purposes are present in all the input tokens. With this respect empty tokens are ignored and files with universal purpose are always collected. Please refer to the user manual for more information.</configure></property>
<property name="port:sof in" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The input sofs</configure></property>
<property name="port:sof out" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The combined sof</configure></property>
<property name="prop:semanticType41" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="prop:entityId" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="prop:class" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
</property>        <property name="class" class="ptolemy.kernel.util.StringAttribute" value="org.eso.SofCombiner">
            <property name="id" class="ptolemy.kernel.util.StringAttribute" value="null">
            </property>
        </property>
        <property name="semanticType41" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:4:1#ESO">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[275.0, 25.0]">
        </property>
        <port name="sof in" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
        <port name="sof in opt" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
        <port name="sof out" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
        <port name="logs" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
        </port>
    </entity>
    <entity name="DataFilter" class="org.eso.DataFilter">
        <property name="Mode" class="ptolemy.data.expr.StringParameter" value="Select">
        </property>
        <property name="FITS Viewer" class="ptolemy.data.expr.StringParameter" value="fv">
        </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>ESO</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>2.0</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The DataFilter displays all the files in a given SoF and allows the user to view their header, view them in an external application, select or deselect only some of them and then continue or pause the workflow.</configure></property>
<property name="port:sof in" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The input SoF</configure></property>
<property name="port:sof out" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The selected SoF</configure></property>
<property name="port:sof rejected" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The rejected SoF</configure></property>
<property name="prop:semanticType41" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="prop:entityId" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
<property name="prop:FITS Viewer" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The application used to inspect FITS files</configure></property>
<property name="prop:Mode" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>&lt;p&gt;Skip: automatically select all files and don't show any window;&lt;/p&gt;&lt;p&gt;Display: select all the files and allow the user only to view them;&lt;/p&gt;&lt;p&gt;Select: standard mode.&lt;/p&gt;</configure></property>
<property name="prop:class" class="ptolemy.kernel.util.ConfigurableAttribute"><configure></configure></property>
</property>        <property name="class" class="ptolemy.kernel.util.StringAttribute" value="org.eso.DataFilter">
            <property name="id" class="ptolemy.kernel.util.StringAttribute" value="null">
            </property>
        </property>
        <property name="semanticType41" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:4:1#ESO">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[385.0, 25.0]">
        </property>
        <port name="sof in" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="tokenConsumptionRate" class="ptolemy.data.expr.Parameter" value="1">
            </property>
        </port>
        <port name="sof out" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
        <port name="sof rejected" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="multiport"/>
            <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
            </property>
        </port>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[265.0, -70.0]">
        </vertex>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="SofCreator.data dir" relation="relation"/>
    <link port="SofCreator.sof out" relation="relation6"/>
    <link port="String Constant.output" relation="relation"/>
    <link port="IDL.out_sof" relation="relation2"/>
    <link port="IDL.in_sof" relation="relation6"/>
    <link port="SofCombiner.sof in" relation="relation6"/>
    <link port="SofCombiner.sof in" relation="relation2"/>
    <link port="SofCombiner.sof out" relation="relation3"/>
    <link port="DataFilter.sof in" relation="relation3"/>
</entity>
